{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marwa\\\\Desktop\\\\Projects\\\\sep6-frontend\\\\frontend\\\\src\\\\context\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport AppReducer from \"./AppReducer\"; // initial state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  watchlist: localStorage.getItem('watchlist') ? JSON.parse(localStorage.getItem('watchlist')) : [],\n  watched: localStorage.getItem('watched') ? JSON.parse(localStorage.getItem('watched')) : []\n}; // create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); // provider components\n\nexport const GlobalProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  useEffect(() => {\n    localStorage.setItem('watchlist', JSON.stringify(state.watchlist));\n    localStorage.setItem(\"watched\", JSON.stringify(state.watched));\n  }, [state]); // actions\n\n  const addMovieToWatchlist = movie => {\n    //console.log(\"guci\");\n    dispatch({\n      type: \"ADD_MOVIE_TO_WATCHLIST\",\n      payload: movie\n    });\n  }; // to remove movie from watch list\n\n\n  const removeMovieFromWatchlist = id => {\n    dispatch({\n      type: \"REMOVE_MOVIE_FROM_WATCHLIST\",\n      payload: id\n    });\n  };\n\n  const addMovieToWatched = movie => {\n    dispatch({\n      type: \"ADD_MOVIE_TO_WATCHED\",\n      payload: movie\n    });\n  }; // move to watchlist from watched\n\n\n  const moveToWatchlist = movie => {\n    dispatch({\n      type: \"MOVE_TO_WATCHLIST\",\n      payload: movie\n    });\n  }; // remove from wathed\n\n\n  const removeFromWatched = id => {\n    dispatch({\n      type: \"REMOVE_FROM_WATCHED\",\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      watchlist: state.watchlist,\n      watched: state.watched,\n      addMovieToWatchlist,\n      removeMovieFromWatchlist,\n      addMovieToWatched,\n      moveToWatchlist,\n      removeFromWatched\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GlobalProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["C:/Users/marwa/Desktop/Projects/sep6-frontend/frontend/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","AppReducer","initialState","watchlist","localStorage","getItem","JSON","parse","watched","GlobalContext","GlobalProvider","props","state","dispatch","setItem","stringify","addMovieToWatchlist","movie","type","payload","removeMovieFromWatchlist","id","addMovieToWatched","moveToWatchlist","removeFromWatched","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA2D,OAA3D;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAD9E;AAEjBG,EAAAA,OAAO,EAAEJ,YAAY,CAACC,OAAb,CAAqB,SAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAlC,GAAgF;AAFxE,CAArB,C,CAKI;;AACA,OAAO,MAAMI,aAAa,gBAAGX,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMQ,cAAc,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACE,UAAD,EAAaC,YAAb,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,YAAY,CAACU,OAAb,CAAqB,WAArB,EAAkCR,IAAI,CAACS,SAAL,CAAeH,KAAK,CAACT,SAArB,CAAlC;AACAC,IAAAA,YAAY,CAACU,OAAb,CAAqB,SAArB,EAAgCR,IAAI,CAACS,SAAL,CAAeH,KAAK,CAACJ,OAArB,CAAhC;AACH,GAHQ,EAGN,CAACI,KAAD,CAHM,CAAT,CAHqC,CAQzC;;AACA,QAAMI,mBAAmB,GAAIC,KAAD,IAAW;AACnC;AACAJ,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE,wBAAP;AAAiCC,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AACH,GAHD,CATyC,CAczC;;;AACA,QAAMG,wBAAwB,GAAIC,EAAD,IAAQ;AACrCR,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE,6BAAP;AAAsCC,MAAAA,OAAO,EAAEE;AAA/C,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAGL,KAAK,IAAI;AAC/BJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,sBAAR;AAAgCC,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACH,GAFD,CAnByC,CAuBzC;;;AACA,QAAMM,eAAe,GAAGN,KAAK,IAAI;AAC7BJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,mBAAR;AAA6BC,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACH,GAFD,CAxByC,CA4BzC;;;AACA,QAAMO,iBAAiB,GAAGH,EAAE,IAAI;AAC5BR,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE,qBAAP;AAA8BC,MAAAA,OAAO,EAACE;AAAtC,KAAD,CAAR;AACH,GAFD;;AAKA,sBACI,QAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHlB,MAAAA,SAAS,EAAES,KAAK,CAACT,SADd;AAEHK,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAFZ;AAGHQ,MAAAA,mBAHG;AAIHI,MAAAA,wBAJG;AAKHE,MAAAA,iBALG;AAMHC,MAAAA,eANG;AAOHC,MAAAA;AAPG,KADX;AAAA,cAWKb,KAAK,CAACc;AAXX;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAjDU;;GAAMf,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer, useEffect} from 'react';\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n// initial state\r\nconst initialState = {\r\n    watchlist: localStorage.getItem('watchlist') ? JSON.parse(localStorage.getItem('watchlist')) : [],\r\n    watched: localStorage.getItem('watched') ? JSON.parse(localStorage.getItem('watched')) : [],\r\n};\r\n\r\n    // create context\r\n    export const GlobalContext = createContext(initialState);\r\n\r\n    // provider components\r\n    export const GlobalProvider = (props) => {\r\n        const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n        useEffect(() => {\r\n            localStorage.setItem('watchlist', JSON.stringify(state.watchlist))\r\n            localStorage.setItem(\"watched\", JSON.stringify(state.watched));\r\n        }, [state]);\r\n\r\n    // actions\r\n    const addMovieToWatchlist = (movie) => {\r\n        //console.log(\"guci\");\r\n        dispatch({type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie});\r\n    };\r\n\r\n    // to remove movie from watch list\r\n    const removeMovieFromWatchlist = (id) => {\r\n        dispatch({type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id});\r\n    };\r\n\r\n    const addMovieToWatched = movie => {\r\n        dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie});\r\n    };\r\n\r\n    // move to watchlist from watched\r\n    const moveToWatchlist = movie => {\r\n        dispatch({ type: \"MOVE_TO_WATCHLIST\", payload: movie});\r\n    };\r\n\r\n    // remove from wathed\r\n    const removeFromWatched = id => {\r\n        dispatch({type: \"REMOVE_FROM_WATCHED\", payload:id});\r\n    };\r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider \r\n            value={{ \r\n                watchlist: state.watchlist, \r\n                watched: state.watched, \r\n                addMovieToWatchlist, \r\n                removeMovieFromWatchlist,\r\n                addMovieToWatched,\r\n                moveToWatchlist,\r\n                removeFromWatched,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}