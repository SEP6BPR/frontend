{"ast":null,"code":"import React,{useContext}from'react';import{GlobalContext}from'../context/GlobalState';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ResultCard=function ResultCard(_ref){var movie=_ref.movie;var _useContext=useContext(GlobalContext),addMovieToWatchlist=_useContext.addMovieToWatchlist,addMovieToWatched=_useContext.addMovieToWatched,watchlist=_useContext.watchlist,watched=_useContext.watched;var storedMovie=watchlist.find(function(o){return o.id===movie.id;});var storedMovieWatched=watched.find(function(o){return o.id===movie.id;});var watchlistDisabled=storedMovie?true:storedMovieWatched?true:false;var watchedDisabled=storedMovieWatched?true:false;return/*#__PURE__*/_jsxs(\"div\",{className:\"result-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"poster-wrapper\",children:movie.poster_path?/*#__PURE__*/_jsx(\"img\",{src:\"https://image.tmdb.org/t/p/w200\".concat(movie.poster_path),alt:\"\".concat(movie.title,\" Poster\")}):/*#__PURE__*/_jsx(\"div\",{className:\"filler-poster\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"title\",children:movie.title}),/*#__PURE__*/_jsx(\"h4\",{className:\"release-date\",children:movie.release_date?movie.release_date.substring(0,4):\"-\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn\",disabled:watchlistDisabled,onClick:function onClick(){return addMovieToWatchlist(movie);},children:\"Add to Watchlist\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",disabled:watchedDisabled,onClick:function onClick(){return addMovieToWatched(movie);},children:\"Add to Watched\"})]})]})]});};","map":{"version":3,"sources":["C:/Users/marwa/Desktop/Projects/sep6-frontend/frontend/src/components/ResultCard.js"],"names":["React","useContext","GlobalContext","ResultCard","movie","addMovieToWatchlist","addMovieToWatched","watchlist","watched","storedMovie","find","o","id","storedMovieWatched","watchlistDisabled","watchedDisabled","poster_path","title","release_date","substring"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAgC,OAAhC,CACA,OAAQC,aAAR,KAA4B,wBAA5B,C,wFAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAa,IAAXC,CAAAA,KAAW,MAAXA,KAAW,CACnC,gBAEIH,UAAU,CAACC,aAAD,CAFd,CACIG,mBADJ,aACIA,mBADJ,CACyBC,iBADzB,aACyBA,iBADzB,CAC4CC,SAD5C,aAC4CA,SAD5C,CACuDC,OADvD,aACuDA,OADvD,CAIA,GAAIC,CAAAA,WAAW,CAAGF,SAAS,CAACG,IAAV,CAAe,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,EAAF,GAASR,KAAK,CAACQ,EAAnB,EAAhB,CAAlB,CACA,GAAIC,CAAAA,kBAAkB,CAAGL,OAAO,CAACE,IAAR,CAAa,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,EAAF,GAASR,KAAK,CAACQ,EAAtB,EAAb,CAAzB,CAEA,GAAME,CAAAA,iBAAiB,CAAGL,WAAW,CACnC,IADmC,CAEnCI,kBAAkB,CAClB,IADkB,CAElB,KAJF,CAMA,GAAME,CAAAA,eAAe,CAAGF,kBAAkB,CAAG,IAAH,CAAU,KAApD,CAEA,mBACI,aAAK,SAAS,CAAC,aAAf,wBACI,YAAK,SAAS,CAAC,gBAAf,UACKT,KAAK,CAACY,WAAN,cACG,YAAK,GAAG,0CAAoCZ,KAAK,CAACY,WAA1C,CAAR,CACA,GAAG,WAAKZ,KAAK,CAACa,KAAX,WADH,EADH,cAIG,YAAK,SAAS,CAAC,eAAf,EALR,EADJ,cAUI,aAAK,SAAS,CAAC,MAAf,wBACI,aAAK,SAAS,CAAC,QAAf,wBACI,WAAI,SAAS,CAAC,OAAd,UAAuBb,KAAK,CAACa,KAA7B,EADJ,cAEI,WAAI,SAAS,CAAC,cAAd,UACKb,KAAK,CAACc,YAAN,CAAqBd,KAAK,CAACc,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,CAAgC,CAAhC,CAArB,CAA0D,GAD/D,EAFJ,GADJ,cAQI,aAAK,SAAS,CAAC,UAAf,wBACI,eACA,SAAS,CAAC,KADV,CAEA,QAAQ,CAAIL,iBAFZ,CAGA,OAAO,CAAE,yBAAMT,CAAAA,mBAAmB,CAACD,KAAD,CAAzB,EAHT,8BADJ,cAQI,eACA,SAAS,CAAC,KADV,CAEA,QAAQ,CAAIW,eAFZ,CAGA,OAAO,CAAE,yBAAMT,CAAAA,iBAAiB,CAACF,KAAD,CAAvB,EAHT,4BARJ,GARJ,GAVJ,GADJ,CAsCH,CAtDM","sourcesContent":["import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const ResultCard = ({movie}) => {\r\n    const {\r\n        addMovieToWatchlist, addMovieToWatched, watchlist, watched\r\n    } = useContext(GlobalContext);\r\n    \r\n    let storedMovie = watchlist.find(o => o.id === movie.id);\r\n    let storedMovieWatched = watched.find((o) => o.id === movie.id);\r\n\r\n    const watchlistDisabled = storedMovie \r\n    ? true \r\n    : storedMovieWatched \r\n    ? true \r\n    : false;\r\n\r\n    const watchedDisabled = storedMovieWatched ? true : false;\r\n\r\n    return (\r\n        <div className=\"result-card\">\r\n            <div className=\"poster-wrapper\">\r\n                {movie.poster_path ? (\r\n                    <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} \r\n                    alt={`${movie.title} Poster`}/>\r\n                ) : (\r\n                    <div className=\"filler-poster\"></div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"info\">\r\n                <div className=\"header\">\r\n                    <h3 className=\"title\">{movie.title}</h3>\r\n                    <h4 className=\"release-date\">\r\n                        {movie.release_date ? movie.release_date.substring(0, 4) : \"-\"}\r\n                    </h4>\r\n                </div>\r\n\r\n                <div className=\"controls\">\r\n                    <button \r\n                    className=\"btn\" \r\n                    disabled = {watchlistDisabled}\r\n                    onClick={() => addMovieToWatchlist(movie)}>\r\n                        Add to Watchlist\r\n                    </button>\r\n\r\n                    <button \r\n                    className=\"btn\" \r\n                    disabled = {watchedDisabled}\r\n                    onClick={() => addMovieToWatched(movie)}>\r\n                        Add to Watched\r\n                    </button>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}