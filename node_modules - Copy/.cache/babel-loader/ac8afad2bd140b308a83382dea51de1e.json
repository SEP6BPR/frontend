{"ast":null,"code":"// function that return state data (redux)\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_MOVIE_TO_WATCHLIST\":\n      return { ...state,\n        watchlist: [action.payload, ...state.watchlist] //adds to excisting watchlist array\n\n      };\n\n    case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n      return { ...state,\n        watchlist: state.watchlist.filter(movie => movie.id !== action.payload)\n      };\n\n    case \"ADD_MOVIE_TO_WATCHED\":\n      return { ...state,\n        watchlist: state.watchlist.filter(movie => movie.id !== action.payload.id),\n        watched: [action.payload, ...state.watched]\n      };\n\n    case \"MOVE_TO_WATCHLIST\":\n      return { ...state,\n        watched: state.watched.filter(movie => movie.id !== action.payload.id),\n        //payload.id bc accessing the whole movie\n        watchlist: [action.payload, ...state.watchlist]\n      };\n\n    case \"REMOVE_FROM_WATCHED\":\n      return { ...state,\n        watched: state.watched.filter(movie => movie.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/marwa/Desktop/Projects/sep6-frontend/frontend/src/context/AppReducer.js"],"names":["reducer","state","action","type","watchlist","payload","filter","movie","id","watched"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,wBAAL;AACA,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,SAAS,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,SAA1B,CAFR,CAE8C;;AAF9C,OAAP;;AAIA,SAAK,6BAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,CAAgBE,MAAhB,CAAuBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaN,MAAM,CAACG,OAApD;AAFR,OAAP;;AAKJ,SAAK,sBAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEHG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,CAAgBE,MAAhB,CAAuBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaN,MAAM,CAACG,OAAP,CAAeG,EAA5D,CAFR;AAIHC,QAAAA,OAAO,EAAE,CAACP,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACQ,OAA1B;AAJN,OAAP;;AAMJ,SAAK,mBAAL;AACI,aAAO,EACH,GAAGR,KADA;AAEHQ,QAAAA,OAAO,EAAER,KAAK,CAACQ,OAAN,CAAcH,MAAd,CAAqBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaN,MAAM,CAACG,OAAP,CAAeG,EAA1D,CAFN;AAEqE;AACxEJ,QAAAA,SAAS,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,SAA1B;AAHR,OAAP;;AAKJ,SAAK,qBAAL;AACI,aAAM,EACF,GAAGH,KADD;AAEFQ,QAAAA,OAAO,EAAER,KAAK,CAACQ,OAAN,CAAcH,MAAd,CAAqBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaN,MAAM,CAACG,OAAlD;AAFP,OAAN;;AAIR;AACI,aAAOJ,KAAP;AA/BJ;AAiCH,CAlCD;;AAmCA,eAAeD,OAAf","sourcesContent":["// function that return state data (redux)\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"ADD_MOVIE_TO_WATCHLIST\":\r\n        return {\r\n            ...state,\r\n            watchlist: [action.payload, ...state.watchlist], //adds to excisting watchlist array\r\n        };\r\n        case \"REMOVE_MOVIE_FROM_WATCHLIST\":\r\n            return {\r\n                ...state,\r\n                watchlist: state.watchlist.filter(movie => movie.id !== action.payload\r\n                ),\r\n            };\r\n        case \"ADD_MOVIE_TO_WATCHED\":\r\n            return {\r\n                ...state,\r\n                watchlist: state.watchlist.filter(movie => movie.id !== action.payload.id\r\n                ),\r\n                watched: [action.payload, ...state.watched],\r\n            };\r\n        case \"MOVE_TO_WATCHLIST\":\r\n            return {\r\n                ...state,\r\n                watched: state.watched.filter(movie => movie.id !== action.payload.id), //payload.id bc accessing the whole movie\r\n                watchlist: [action.payload, ...state.watchlist]\r\n            };\r\n        case \"REMOVE_FROM_WATCHED\":\r\n            return{\r\n                ...state,\r\n                watched: state.watched.filter(movie => movie.id !== action.payload),\r\n            };\r\n    default:\r\n        return state;\r\n    }\r\n};\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}